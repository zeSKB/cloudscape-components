{"version":3,"file":"header.js","sourceRoot":"lib/style-dictionary/","sources":["visual-refresh/contexts/header.ts"],"names":[],"mappings":";;;;;;AAGA,sCAAwD;AACxD,wCAA2D;AAC3D,yDAAiC;AACjC,uCAA+D;AAE/D,MAAM,UAAU,GAAG,gBAAgB,CAAC;AAEpC,MAAM,WAAW,GAAqC;IACpD,yBAAyB,EAAE,UAAU;IACrC,kCAAkC,EAAE,UAAU;IAC9C,mCAAmC,EAAE,UAAU;IAC/C,6BAA6B,EAAE,UAAU;IACzC,2BAA2B,EAAE,UAAU;IACvC,6BAA6B,EAAE,UAAU;IACzC,8BAA8B,EAAE,UAAU;IAC1C,0BAA0B,EAAE,UAAU;CACvC,CAAC;AAEF,MAAM,aAAa,GAAsC;IACvD,eAAe,EAAE,MAAM;IACvB,iBAAiB,EAAE,gBAAmB,CAAC,iBAAiB;IACxD,WAAW,EAAE,gBAAmB,CAAC,WAAW;IAC5C,iBAAiB,EAAE,gBAAmB,CAAC,iBAAiB;CACzD,CAAC;AAEF,MAAM,mBAAmB,GAAG,IAAA,iBAAS,EAAC,eAAiB,EAAE,MAAM,CAAC,CAAC;AACjE,MAAM,qBAAqB,GAAG,IAAA,iBAAS,EAAC,gBAAmB,EAAE,MAAM,CAAC,CAAC;AAErE,MAAM,cAAc,GAAiD,IAAA,6BAAqB,EACxF,IAAA,eAAK,EAAC,EAAE,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,aAAa,EAAE,WAAW,CAAC,CAClF,CAAC;AAGyB,gCAAM;AADpB,QAAA,IAAI,GAAmC,OAAO,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StyleDictionary } from '../../utils/interfaces';\nimport { tokens as parentColorTokens } from '../colors';\nimport { tokens as parentShadowsTokens } from '../shadows';\nimport merge from 'lodash/merge';\nimport { expandColorDictionary, pickState } from '../../utils';\n\nconst background = '{colorGrey900}';\n\nconst colorTokens: StyleDictionary.ColorsDictionary = {\n  colorBackgroundLayoutMain: background,\n  colorBackgroundButtonNormalDefault: background,\n  colorBackgroundButtonNormalDisabled: background,\n  colorBackgroundControlDefault: background,\n  colorBackgroundInputDefault: background,\n  colorBackgroundSegmentDefault: background,\n  colorBackgroundSegmentDisabled: background,\n  colorBackgroundTableHeader: background,\n};\n\nconst shadowsTokens: StyleDictionary.ShadowsDictionary = {\n  shadowContainer: 'none',\n  shadowFlashSticky: parentShadowsTokens.shadowFlashSticky,\n  shadowPanel: parentShadowsTokens.shadowPanel,\n  shadowPanelToggle: parentShadowsTokens.shadowPanelToggle,\n};\n\nconst darkModeColorValues = pickState(parentColorTokens, 'dark');\nconst darkModeShadowsValues = pickState(parentShadowsTokens, 'dark');\n\nconst expandedTokens: StyleDictionary.ExpandedColorScopeDictionary = expandColorDictionary(\n  merge({}, darkModeShadowsValues, darkModeColorValues, shadowsTokens, colorTokens)\n);\n\nexport const mode: StyleDictionary.ModeIdentifier = 'color';\nexport { expandedTokens as tokens };\n"]}