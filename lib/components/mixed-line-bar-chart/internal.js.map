{"version":3,"file":"internal.js","sourceRoot":"lib/default/","sources":["mixed-line-bar-chart/internal.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport InternalBox from '../box/internal';\nimport ChartStatusContainer, { getChartStatus } from '../internal/components/chart-status-container';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { ChartDataTypes, MixedLineBarChartProps } from './interfaces';\nimport InternalChartFilters from './chart-filters';\nimport InternalChartLegend from './chart-legend';\nimport ChartContainer from './chart-container';\nimport cartesianStyles from '../internal/components/cartesian-chart/styles.css.js';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { isDevelopment } from '../internal/is-development';\nimport createCategoryColorScale from '../internal/utils/create-category-color-scale';\nimport { ScaledPoint } from './make-scaled-series';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { nodeContains } from '../internal/utils/dom';\nimport { SomeRequired } from '../internal/types';\nimport { isXThreshold, isYThreshold } from './utils';\n\ntype InternalMixedLineBarChartProps<T extends ChartDataTypes> = SomeRequired<\n  MixedLineBarChartProps<T>,\n  | 'series'\n  | 'height'\n  | 'xScaleType'\n  | 'yScaleType'\n  | 'stackedBars'\n  | 'horizontalBars'\n  | 'statusType'\n  | 'detailPopoverSize'\n  | 'emphasizeBaselineAxis'\n> &\n  InternalBaseComponentProps;\n\nexport default function InternalMixedLineBarChart<T extends number | string | Date>({\n  height,\n  xScaleType,\n  yScaleType,\n  xDomain,\n  yDomain,\n  highlightedSeries: controlledHighlightedSeries,\n  visibleSeries: controlledVisibleSeries,\n  series: externalSeries,\n  onFilterChange,\n  onHighlightChange: controlledOnHighlightChange,\n  i18nStrings,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  xTitle,\n  yTitle,\n  stackedBars,\n  horizontalBars,\n  hideFilter,\n  additionalFilters,\n  hideLegend,\n  legendTitle,\n  statusType,\n  detailPopoverSize,\n  emphasizeBaselineAxis,\n  empty,\n  noMatch,\n  errorText,\n  loadingText,\n  recoveryText,\n  onRecoveryClick,\n  __internalRootRef = null,\n  ...props\n}: InternalMixedLineBarChartProps<T>) {\n  const baseProps = getBaseProps(props);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const gotBarSeries = externalSeries.some(s => s.type === 'bar');\n    const gotLineSeries = externalSeries.some(s => s.type === 'line');\n\n    if (xScaleType !== 'categorical' && gotBarSeries) {\n      warnOnce(\n        'MixedLineBarChart',\n        `Bar series cannot be used with a ${xScaleType} scale. Use a categorical x axis instead.`\n      );\n    }\n\n    if (horizontalBars && gotLineSeries) {\n      warnOnce(\n        'MixedLineBarChart',\n        `Property horizontalBars can only be used with charts that contain only bar or threshold series.`\n      );\n    }\n\n    for (const s of externalSeries) {\n      if (s.type === 'threshold' && s.x !== undefined && s.y !== undefined) {\n        warnOnce('MixedLineBarChart', `Series of type \"threshold\" must contain either x or y property.`);\n      }\n      if (s.type === 'threshold' && s.x === undefined && s.y === undefined) {\n        warnOnce('MixedLineBarChart', `Series of type \"threshold\" must contain either x or y property.`);\n      }\n    }\n  }, [xScaleType, horizontalBars, externalSeries]);\n\n  const series = useMemo(() => {\n    // Generate series colors if not explicitly provided.\n    // The thresholds use a dedicated colour scale.\n    const colors = createCategoryColorScale(\n      externalSeries,\n      it => isYThreshold(it) || isXThreshold(it),\n      it => it.color || null\n    );\n\n    return externalSeries.map((s, i) => ({ index: i, color: colors[i], series: s }));\n  }, [externalSeries]);\n\n  const [highlightedPoint, setHighlightedPoint] = useState<ScaledPoint<T> | null>(null);\n  const [highlightedGroupIndex, setHighlightedGroupIndex] = useState<number | null>(null);\n  const [highlightedSeries = null, setHighlightedSeries] = useControllable(\n    controlledHighlightedSeries,\n    controlledOnHighlightChange,\n    null,\n    {\n      componentName: 'MixedLineBarChart',\n      controlledProp: 'highlightedSeries',\n      changeHandler: 'onHighlightChange',\n    }\n  );\n  const [legendSeries, setLegendSeries] = useState<MixedLineBarChartProps.ChartSeries<T> | null>(highlightedSeries);\n  useEffect(() => {\n    setLegendSeries(controlledHighlightedSeries || null);\n  }, [controlledHighlightedSeries]);\n\n  const [externalVisibleSeries, setExternalVisibleSeries] = useControllable(\n    controlledVisibleSeries,\n    onFilterChange,\n    externalSeries,\n    {\n      componentName: 'MixedLineBarChart',\n      controlledProp: 'visibleSeries',\n      changeHandler: 'onFilterChange',\n    }\n  );\n\n  if (isDevelopment) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const previousSeries = usePrevious(externalSeries);\n\n    const hasPrevious = !!(previousSeries && previousSeries.length);\n    const hasCurrent = !!externalSeries.length;\n\n    if (hasPrevious && hasCurrent && externalSeries !== previousSeries && !controlledVisibleSeries && !hideFilter) {\n      warnOnce(\n        'MixedLineBarChart',\n        'The `series` value passed into the component changed. ' +\n          'This may cause problems with filtering - we recommend that you make the `series` value constant, ' +\n          'or provide a `visibleSeries` value that derives from the current `series` value.'\n      );\n    }\n  }\n\n  const visibleSeries = useMemo(\n    () => series.filter(s => externalVisibleSeries?.indexOf(s.series) !== -1),\n    [series, externalVisibleSeries]\n  );\n\n  const filterChange = (selectedSeries: ReadonlyArray<MixedLineBarChartProps.ChartSeries<T>>) => {\n    setExternalVisibleSeries(selectedSeries);\n    fireNonCancelableEvent(onFilterChange, {\n      visibleSeries: selectedSeries,\n    });\n  };\n\n  const onHighlightChange = (series: MixedLineBarChartProps.ChartSeries<T> | null) => {\n    setHighlightedSeries(series);\n    fireNonCancelableEvent(controlledOnHighlightChange, {\n      highlightedSeries: series,\n    });\n    setLegendSeries(series);\n  };\n\n  const onBlur = (event: React.FocusEvent) => {\n    if (event.relatedTarget && !nodeContains(containerRef.current, event.relatedTarget)) {\n      highlightedSeries && onHighlightChange(highlightedSeries);\n      setHighlightedPoint(null);\n      setHighlightedGroupIndex(null);\n      setLegendSeries(null);\n    }\n  };\n\n  const { isEmpty, isNoMatch, showChart } = getChartStatus({\n    externalData: externalSeries,\n    visibleData: visibleSeries || [],\n    statusType,\n  });\n  const showFilters = statusType === 'finished' && (!isEmpty || isNoMatch) && (additionalFilters || !hideFilter);\n  const showLegend = !hideLegend && !isEmpty && statusType === 'finished';\n  const reserveLegendSpace = !showChart && !hideLegend;\n  const reserveFilterSpace = !showChart && !isNoMatch && (!hideFilter || additionalFilters);\n  const mergedRef = useMergeRefs(containerRef, __internalRootRef);\n\n  return (\n    <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef} onBlur={onBlur}>\n      {showFilters && (\n        <InternalBox className={cartesianStyles['filter-container']} margin={{ bottom: 'l' }}>\n          <InternalChartFilters\n            series={series}\n            visibleSeries={externalVisibleSeries || []}\n            onChange={filterChange}\n            i18nStrings={i18nStrings}\n            hideFilter={hideFilter}\n            additionalFilters={additionalFilters}\n          />\n        </InternalBox>\n      )}\n\n      <div\n        className={clsx(styles.content, {\n          [styles['content--reserve-filter']]: reserveFilterSpace,\n          [styles['content--reserve-legend']]: reserveLegendSpace,\n        })}\n        style={{ minHeight: height }}\n      >\n        <ChartStatusContainer\n          isEmpty={isEmpty}\n          isNoMatch={isNoMatch}\n          showChart={showChart}\n          statusType={statusType}\n          empty={empty}\n          noMatch={noMatch}\n          loadingText={loadingText}\n          errorText={errorText}\n          recoveryText={recoveryText}\n          onRecoveryClick={onRecoveryClick}\n        />\n        {showChart && (\n          <ChartContainer\n            height={height}\n            xScaleType={xScaleType}\n            yScaleType={yScaleType}\n            xDomain={xDomain}\n            yDomain={yDomain}\n            xTickFormatter={i18nStrings?.xTickFormatter}\n            yTickFormatter={i18nStrings?.yTickFormatter}\n            emphasizeBaselineAxis={emphasizeBaselineAxis}\n            stackedBars={stackedBars}\n            horizontalBars={horizontalBars}\n            series={series}\n            visibleSeries={visibleSeries}\n            highlightedSeries={highlightedSeries}\n            onHighlightChange={onHighlightChange}\n            highlightedPoint={highlightedPoint}\n            setHighlightedPoint={setHighlightedPoint}\n            highlightedGroupIndex={highlightedGroupIndex}\n            setHighlightedGroupIndex={setHighlightedGroupIndex}\n            detailPopoverSize={detailPopoverSize}\n            xTitle={xTitle}\n            yTitle={yTitle}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescription={ariaDescription}\n            i18nStrings={i18nStrings}\n            plotContainerRef={containerRef}\n          />\n        )}\n      </div>\n\n      {showLegend && (\n        <InternalBox margin={{ top: 'm' }}>\n          <InternalChartLegend\n            series={series}\n            visibleSeries={externalVisibleSeries || []}\n            highlightedSeries={legendSeries}\n            onHighlightChange={onHighlightChange}\n            legendTitle={legendTitle}\n            ariaLabel={i18nStrings?.legendAriaLabel}\n            plotContainerRef={containerRef}\n          />\n        </InternalBox>\n      )}\n    </div>\n  );\n}\n"]}