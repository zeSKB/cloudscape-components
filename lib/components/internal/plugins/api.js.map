{"version":3,"file":"api.js","sourceRoot":"lib/default/","sources":["internal/plugins/api.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAgB,iBAAiB,EAA+B,MAAM,sBAAsB,CAAC;AAEpG,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAuBlD,SAAS,SAAS,CAAC,aAA4B;IAC7C,IAAI;QACF,IAAI,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAG,UAAU,CAAC,EAAE;YAC/B,OAAO,aAAa,CAAC,UAAU,CAAC,CAAC;SAClC;QAED,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,MAAM,KAAK,aAAa,EAAE;YAC5D,4DAA4D;YAC5D,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,SAAS,CAAC,aAAa,CAAC,MAAuB,CAAC,CAAC;KACzD;IAAC,OAAO,EAAE,EAAE;QACX,0CAA0C;QAC1C,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;AAED,SAAS,OAAO;IACd,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO,SAAS,EAAE,CAAC;KACpB;IACD,MAAM,GAAG,GAAG,MAAkC,CAAC;IAC/C,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAI,GAAG,EAAE;QACP,OAAO,GAAG,CAAC;KACZ;IACD,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,EAAE,CAAC;IAC9B,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,oBAAoB,EAAE,GAAG,OAAO,EAAE,CAAC;AAEhE,SAAS,SAAS;IAChB,MAAM,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;IAExC,OAAO;QACL,YAAY,EAAE;YACZ,SAAS,EAAE;gBACT,cAAc,EAAE,OAAO,CAAC,cAAc;aACvC;SACF;QACD,oBAAoB,EAAE;YACpB,SAAS,EAAE;gBACT,sBAAsB,EAAE,OAAO,CAAC,sBAAsB;gBACtD,mBAAmB,EAAE,OAAO,CAAC,mBAAmB;aACjD;SACF;KACF,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DrawerConfig, DrawersController, DrawersRegistrationListener } from './drawers-controller';\n\nconst storageKey = Symbol.for('awsui-plugin-api');\n\ninterface AwsuiPluginApiPublic {\n  appLayout: {\n    registerDrawer(config: DrawerConfig): void;\n  };\n}\ninterface AwsuiPluginApiInternal {\n  appLayout: {\n    clearRegisteredDrawers(): void;\n    onDrawersRegistered(listener: DrawersRegistrationListener): () => void;\n  };\n}\n\ninterface AwsuiApi {\n  awsuiPlugins: AwsuiPluginApiPublic;\n  awsuiPluginsInternal: AwsuiPluginApiInternal;\n}\n\ninterface WindowWithApi extends Window {\n  [storageKey]: AwsuiApi;\n}\n\nfunction findUpApi(currentWindow: WindowWithApi): AwsuiApi | undefined {\n  try {\n    if (currentWindow?.[storageKey]) {\n      return currentWindow[storageKey];\n    }\n\n    if (!currentWindow || currentWindow.parent === currentWindow) {\n      // When the window has no more parents, it references itself\n      return undefined;\n    }\n\n    return findUpApi(currentWindow.parent as WindowWithApi);\n  } catch (ex) {\n    // Most likely a cross-origin access error\n    return undefined;\n  }\n}\n\nfunction loadApi() {\n  if (typeof window === 'undefined') {\n    return createApi();\n  }\n  const win = window as unknown as WindowWithApi;\n  const api = findUpApi(win);\n  if (api) {\n    return api;\n  }\n  win[storageKey] = createApi();\n  return win[storageKey];\n}\n\nexport const { awsuiPlugins, awsuiPluginsInternal } = loadApi();\n\nfunction createApi(): AwsuiApi {\n  const drawers = new DrawersController();\n\n  return {\n    awsuiPlugins: {\n      appLayout: {\n        registerDrawer: drawers.registerDrawer,\n      },\n    },\n    awsuiPluginsInternal: {\n      appLayout: {\n        clearRegisteredDrawers: drawers.clearRegisteredDrawers,\n        onDrawersRegistered: drawers.onDrawersRegistered,\n      },\n    },\n  };\n}\n"]}