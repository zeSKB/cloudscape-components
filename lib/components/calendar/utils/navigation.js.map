{"version":3,"file":"navigation.js","sourceRoot":"lib/default/","sources":["calendar/utils/navigation.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAEjF,MAAM,UAAU,WAAW,CAAC,SAAe,EAAE,aAAsC;IACjF,OAAO,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;AAC/C,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,SAAe,EAAE,aAAsC;IACjF,OAAO,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,SAAe,EAAE,aAAsC;IAClF,OAAO,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;AAC/C,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,SAAe,EAAE,aAAsC;IAClF,OAAO,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC;AAED,wEAAwE;AACxE,2EAA2E;AAC3E,MAAM,UAAU,WAAW,CAAC,IAAU,EAAE,aAAsC;IAC5E,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,aAAa,CAAC,SAAS,CAAC,EAAE;QAC5B,OAAO,SAAS,CAAC;KAClB;IAED,MAAM,gBAAgB,GAAG,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;IAC/D,OAAO,WAAW,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC;AACjF,CAAC;AAED,4EAA4E;AAC5E,yEAAyE;AACzE,SAAS,QAAQ,CAAC,SAAe,EAAE,aAAsC,EAAE,IAAY;IACrF,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAEvC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;QAC9B,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE;YACvD,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAClC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { addDays, differenceInYears, isSameMonth, startOfMonth } from 'date-fns';\n\nexport function moveNextDay(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, 1);\n}\n\nexport function movePrevDay(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, -1);\n}\n\nexport function moveNextWeek(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, 7);\n}\n\nexport function movePrevWeek(startDate: Date, isDateEnabled: (date: Date) => boolean): Date {\n  return moveDate(startDate, isDateEnabled, -7);\n}\n\n// Returns first enabled date of the month corresponding the given date.\n// If all month's days are disabled the first day of the month is returned.\nexport function getBaseDate(date: Date, isDateEnabled: (date: Date) => boolean) {\n  const startDate = startOfMonth(date);\n  if (isDateEnabled(startDate)) {\n    return startDate;\n  }\n\n  const firstEnabledDate = moveDate(startDate, isDateEnabled, 1);\n  return isSameMonth(startDate, firstEnabledDate) ? firstEnabledDate : startDate;\n}\n\n// Iterates dates forwards or backwards until the next active date is found.\n// If there is no active date in a year range the start date is returned.\nfunction moveDate(startDate: Date, isDateEnabled: (date: Date) => boolean, step: number): Date {\n  let current = addDays(startDate, step);\n\n  while (!isDateEnabled(current)) {\n    if (Math.abs(differenceInYears(startDate, current)) > 1) {\n      return startDate;\n    }\n    current = addDays(current, step);\n  }\n\n  return current;\n}\n"]}